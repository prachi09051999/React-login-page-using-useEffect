{"ast":null,"code":"var _jsxFileName = \"/Users/prachitripathi/Documents/projects/React-login-page-using-useEffect/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: () => {}\n});\nexport const AuthcontextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem('isLoggedIn') === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: false,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AuthcontextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthcontextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthcontextProvider\");","map":{"version":3,"sources":["/Users/prachitripathi/Documents/projects/React-login-page-using-useEffect/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","AuthcontextProvider","props","setIsLoggedIn","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAI,CAAE,CAFsB;AAGtCC,EAAAA,OAAO,EAAE,MAAI,CAAE;AAHuB,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACJ,UAAD,EAAaK,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAsC,GAAzC,EAA6C;AAC3CF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAkC,GAAlC;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMO,aAAa,GAAG,MAAM;AAC1BN,IAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAGG,sBACF,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EACzB;AACEL,MAAAA,UAAU,EAAC,KADb;AAEEC,MAAAA,QAAQ,EAAEW,aAFZ;AAGEV,MAAAA,OAAO,EAAEM;AAHX,KADF;AAAA,cAOGJ,KAAK,CAACU;AAPT;AAAA;AAAA;AAAA;AAAA,UADE;AAWJ,CA9BM;;GAAMX,mB;;KAAAA,mB;AAgCb,eAAeL,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: ()=>{},\n  onLogin: ()=>{}\n});\n\nexport const AuthcontextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if(localStorage.getItem('isLoggedIn') ==='1'){\n      setIsLoggedIn(true);\n    }\n  }, [])\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\",\"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  }; return (\n   <AuthContext.Provider value={\n     {\n       isLoggedIn:false,\n       onLogout: logoutHandler,\n       onLogin: loginHandler\n     }\n   }>\n     {props.children}\n   </AuthContext.Provider>\n );\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}